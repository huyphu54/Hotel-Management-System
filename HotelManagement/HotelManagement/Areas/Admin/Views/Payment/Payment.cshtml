@using HotelManagement.Models
@using X.PagedList

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Payment";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@model X.PagedList.IPagedList<HotelManagement.Models.HoaDon>


<div class="col-lg-12 col-md-6">
    <h3 class="m-0 font-weight-bold text-primary text-center">Danh Sách Hóa Đơn</h3>
    <form asp-action="Payment" method="get">
        <div id="dataTableHover_filter" class="dataTables_filter">
            <label>
                Khách Hàng
                <input type="search" name="searchKhachHang" value="@ViewBag.SearchKhachHang" class="form-control form-control-sm" placeholder="Nhập Tên Khách Hàng" aria-controls="dataTableHover">
            </label>
            <label>
                Ngày Lập Phiếu
                <input type="date" name="searchNgay" value="@ViewBag.SearchNgay?.ToString("yyyy-MM-dd")" class="form-control form-control-sm" aria-controls="dataTableHover">
            </label>
            <button type="submit" class="btn btn-primary btn-primary">Search</button>
        </div>
    </form>
    <table class="table align-items-center table-flush table-hover dataTable" id="dataTableHover" role="grid" aria-describedby="dataTableHover_info">
        <thead class="thead-light">
            <tr>
              
                <th>
                  Ngày Lập Phiếu
                </th>
                <th>
                    Số Tiền Cọc
                </th>
                <th>
                    Tiền Dịch Vụ
                </th>
                <th>
                   Tổng Tiền Tạm Tính
                </th>
                <th>
                   Phụ Thu
                </th>
            
                <th>
                  Tổng Tiền Thu
                </th>
           
                <th></th>
            </tr>
        </thead>
        <tfoot >
            <tr>
          
                <th>
                    Ngày Lập Phiếu
                </th>
                <th>
                    Số Tiền Cọc
                </th>
                <th>
                    Tiền Dịch Vụ
                </th>
                <th>
                    Tổng Tiền Tạm Tính
                </th>
                <th>
                    Phụ Thu
                </th>
           
                <th>
                    Tổng Tiền
                </th>

                <th></th>
            </tr>
        </tfoot>
        <tbody>
    @foreach (var item in Model) {
            <tr>
              
                <td>
                    @Html.DisplayFor(modelItem => item.NgayLapPhieu)
                    <td>
                            @item.SoTienCoc?.ToString("N0")
                    </td>
                    <td>
                            @item.TienDichVu?.ToString("N0")
                    </td>
                    <td>
                            @item.TongTienTamTinh?.ToString("N0")
                    </td>
                    <td>
                            @item.PhuThu?.ToString("N0")
                    </td>
                    <td>
                            @item.TongTienThu?.ToString("N0")
                    </td>
           
                <td>
                    <a class="btn btn-success" asp-action="GeneratePdf" asp-route-maHoaDon="@item.MaHoaDon">Xuất Hóa Đơn</a> 
                    <a class="btn btn-info" asp-action="PaymentDetail" asp-route-maHoaDon="@item.MaHoaDon">Chi Tiết Hóa Đơn</a> 
               
                </td>
            </tr>
    }
        </tbody>
    </table>
    <div class="row justify-content-center">

        <div class="col-sm-12 col-md-7">
            <div class="dataTables_paginate paging_simple_numbers" id="dataTableHover_paginate">
                <ul class="pagination justify-content-center">
                    @if (Model.PageNumber > 1)
                    {
                        <li class="paginate_button page-item previous">
                            <a class="page-link" href="@Url.Action("Payment", "Payment", new { page = Model.PageNumber - 1 })">Previous</a>
                        </li>
                    }

                    @{
                        int maxPagesToShow = 10;
                        int startPage = Math.Max(1, Model.PageNumber - maxPagesToShow / 2);
                        int endPage = Math.Min(Model.PageCount, startPage + maxPagesToShow - 1);

                        // Điều chỉnh startPage nếu endPage là cuối cùng
                        if (endPage == Model.PageCount)
                        {
                            startPage = Math.Max(1, endPage - maxPagesToShow + 1);
                        }
                    }

                    @for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="paginate_button page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Payment", "Payment", new { page = i })">@i</a>
                        </li>
                    }


                    @if (endPage < Model.PageCount)
                    {
                        <li class="paginate_button page-item">
                            <span class="page-link">…</span>
                        </li>
                        <li class="paginate_button page-item">
                            <a class="page-link" href="@Url.Action("Payment", "Payment", new { page = Model.PageCount })">@Model.PageCount</a>
                        </li>
                    }

                    @if (Model.PageNumber < Model.PageCount)
                    {
                        <li class="paginate_button page-item next">
                            <a class="page-link" href="@Url.Action("Payment", "Payment", new { page = Model.PageNumber + 1 })">Next</a>
                        </li>
                    }
                </ul>
            </div>
        </div>

    </div>
</div>
